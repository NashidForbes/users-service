#spring.profiles.active=dev
server.port=0
eureka.client.service-url.defaultZone=http://netflix:eureka@localhost:8761/eureka
# Enabled to true to enable service discovery on Eureka server
eureka.instance.preferIpAddress=true
spring.application.name=users-service
eureka.instance.instance-id=${spring.application.name}:${instanceId:${random.value}}
# Prevent or enable integration with Spring Cloud Config Server
spring.cloud.discovery.enabled=true
spring.cloud.discovery.service-id=users-service-springboot-cloud-config
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

spring.zipkin.base-url=http://localhost:9411
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0
sleuth.sampler.rate=10

# Debugging on
logging.level.io.axoniq.usersservice=trace

# We look for Axon Server locally, unless we find a PCF Binding for AxonServer
#axon.axonserver.servers=${vcap.services.AxonServer.credentials.uri:localhost}
axon.axonserver.servers=10.152.183.124:8124


# Management endpoints inclusion
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*

axon.serializer.events=jackson
server.error.include-message=always
server.error.include-binding-errors=always

#spring.datasource.url=jdbc:h2:file:~/usersservice;AUTO_SERVER=true
#spring.datasource.username=root
#spring.datasource.password=password
#spring.datasource.driver-class-name=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.h2.console.enabled=true
#spring.h2.console.settings.web-allow-others=true

logging.level.org.axonframework.axonserver.connector.event.axon.AxonServerEventStore=TRACE

axon.eventhandling.processors.userservices-group.mode=subscribing

